#include <stdio.h>

#define MAX 50

void reverseFirstK(int queue[], int n, int k) {
    int stack[MAX];
    int top = -1;

    // Push the first K elements into the stack
    for (int i = 0; i < k; i++) {
        stack[++top] = queue[i];
    }

    // Pop from stack and put back into the queue
    for (int i = 0; i < k; i++) {
        queue[i] = stack[top--];
    }

    // Move the remaining elements to the front
    int temp[MAX];
    for (int i = k; i < n; i++) {
        temp[i - k] = queue[i];
    }
    for (int i = 0; i < n - k; i++) {
        queue[k + i] = temp[i];
    }
}

int main() {
    int n, k;
    int queue[MAX];

    // Read the number of elements in the queue
    scanf("%d", &n);

    // Read the value of K
    scanf("%d", &k);

    // Read the queue elements
    for (int i = 0; i < n; i++) {
        scanf("%d", &queue[i]);
    }

    // Reverse the first K elements
    reverseFirstK(queue, n, k);

    // Print the reversed queue
    printf("Reversed queue: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", queue[i]);
    }
    printf("\n");

    return 0;
}
